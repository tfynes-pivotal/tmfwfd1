apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: where-for-dinner
  namespace: defai;t
  labels:
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/part-of: where-for-dinner-api-gateway
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
spec:
  env: null
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/minScale: "1"
      autoscaling.knative.dev/target: "200"
      autoscaling.knative.dev/maxScale: "4"
  serviceClaims: null
  resources:
    requests:
      memory: 250M
      cpu: 100m
    limits:
      memory: 3.0G
      cpu: 2000m
  source:
    git:
      url: https://github.com/tfynes-pivotal/tmfwfd1
      ref:
        branch: main
    subPath: where-for-dinner-api-gateway
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: where-for-dinner-search
  namespace: defai;t
  labels:
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/part-of: where-for-dinner-search
    networking.knative.dev/visibility: cluster-local
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
spec:
  env: null
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/minScale: "1"
      autoscaling.knative.dev/target: "200"
      autoscaling.knative.dev/maxScale: "4"
  serviceClaims:
  - name: rmq
    ref:
      apiVersion: services.apps.tanzu.vmware.com/v1alpha1
      kind: ResourceClaim
      name: rmq1
  resources:
    requests:
      memory: 250M
      cpu: 100m
    limits:
      memory: 3.0G
      cpu: 2000m
  source:
    git:
      url: https://github.com/tfynes-pivotal/tmfwfd1
      ref:
        branch: main
    subPath: where-for-dinner-search
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: where-for-dinner-search-proc
  namespace: defai;t
  labels:
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/part-of: where-for-dinner-search-proc
    networking.knative.dev/visibility: cluster-local
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
spec:
  env:
  - name: spring_profiles_active
    value: crawler
  build:
    env: null
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/minScale: "1"
      autoscaling.knative.dev/target: "200"
      autoscaling.knative.dev/maxScale: "4"
  serviceClaims:
  - name: rmq
    ref:
      apiVersion: services.apps.tanzu.vmware.com/v1alpha1
      kind: ResourceClaim
      name: rmq1
  resources:
    requests:
      memory: 250M
      cpu: 100m
    limits:
      memory: 3.0G
      cpu: 2000m
  source:
    git:
      url: https://github.com/tfynes-pivotal/tmfwfd1
      ref:
        branch: main
    subPath: where-for-dinner-search-proc
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: where-for-dinner-notify
  namespace: defai;t
  labels:
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/part-of: where-for-dinner-notify
    networking.knative.dev/visibility: cluster-local
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
spec:
  build:
    env: null
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/minScale: "1"
      autoscaling.knative.dev/target: "200"
      autoscaling.knative.dev/maxScale: "4"
  serviceClaims:
  - name: rmq
    ref:
      apiVersion: services.apps.tanzu.vmware.com/v1alpha1
      kind: ResourceClaim
      name: rmq1
  resources:
    requests:
      memory: 250M
      cpu: 100m
    limits:
      memory: 3.0G
      cpu: 2000m
  source:
    git:
      url: https://github.com/tfynes-pivotal/tmfwfd1
      ref:
        branch: main
    subPath: where-for-dinner-notify
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: where-for-dinner-availability
  namespace: defai;t
  labels:
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/part-of: where-for-dinner-availability
    networking.knative.dev/visibility: cluster-local
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
spec:
  build:
    env: null
  env: null
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/minScale: "1"
      autoscaling.knative.dev/target: "200"
      autoscaling.knative.dev/maxScale: "4"
  serviceClaims:
  - name: rmq
    ref:
      apiVersion: services.apps.tanzu.vmware.com/v1alpha1
      kind: ResourceClaim
      name: rmq1
  resources:
    requests:
      memory: 250M
      cpu: 100m
    limits:
      memory: 3.0G
      cpu: 2000m
  source:
    git:
      url: https://github.com/tfynes-pivotal/tmfwfd1
      ref:
        branch: main
    subPath: where-for-dinner-availability
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: where-for-dinner-ui
  namespace: defai;t
  labels:
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/part-of: where-for-dinner-ui
    networking.knative.dev/visibility: cluster-local
spec:
  env:
  - name: REACT_APP_PROFILE
    value: nonsecure
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/minScale: "1"
  resources:
    requests:
      memory: 250M
      cpu: 100m
    limits:
      memory: 3.0G
      cpu: 2000m
  source:
    git:
      url: https://github.com/tfynes-pivotal/tmfwfd1
      ref:
        branch: main
    subPath: where-for-dinner-ui
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: where-for-dinner-crawler
  namespace: defai;t
  labels:
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/part-of: where-for-dinner-crawler
    networking.knative.dev/visibility: cluster-local
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
spec:
  params:
  - name: ports
    value:
    - port: 80
      containerPort: 8080
      name: http
  resources:
    requests:
      memory: 250M
      cpu: 100m
    limits:
      memory: 3.0G
      cpu: 2000m
  source:
    git:
      url: https://github.com/tfynes-pivotal/tmfwfd1
      ref:
        branch: main
    subPath: where-for-dinner-crawler
